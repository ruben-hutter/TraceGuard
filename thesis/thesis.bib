% ==============================================================================
% THESIS BIBLIOGRAPHY
% ==============================================================================

% FOUNDATIONAL SYMBOLIC EXECUTION

% Classic symbolic execution survey and reference
@article{schwartz_all_2010,
	title = {All You Ever Wanted to Know about Dynamic Taint Analysis and Forward Symbolic Execution (but Might Have Been Afraid to Ask)},
	author = {Schwartz, Edward J. and Avgerinos, Thanassis and Brumley, David},
	journal = {Proceedings of the 2010 IEEE Symposium on Security and Privacy},
	year = {2010},
	pages = {317--331},
	publisher = {IEEE Computer Society}
}

% STATE SPACE REDUCTION

% Efficient state merging techniques
@inproceedings{kuznetsov_efficient_2012,
	title = {Efficient State Merging in Symbolic Execution},
	author = {Kuznetsov, Volodymyr and Kinder, Johannes and Bucur, Stefan and Candea, George},
	booktitle = {Proceedings of the 33rd ACM SIGPLAN Conference on Programming Language Design and Implementation},
	year = {2012},
	pages = {193--204},
	publisher = {ACM},
	series = {PLDI '12}
}

% AEG - Automatic Exploit Generation
@inproceedings{avgerinos_enhancing_2014,
	title = {Enhancing Symbolic Execution with Veritesting},
	author = {Avgerinos, Thanassis and Rebert, Alexandre and Cha, Sang Kil and Brumley, David},
	booktitle = {Proceedings of the 36th International Conference on Software Engineering},
	year = {2014},
	pages = {1083--1094},
	publisher = {ACM},
	series = {ICSE 2014}
}

% EMPC - Recent path cover approach (2025)
@article{yao_empc_2025,
	title = {Empc: Effective Path Prioritization for Symbolic Execution with Path Cover},
	author = {Yao, Shuangjie and Chen, Junjie},
	journal = {arXiv preprint arXiv:2505.03555},
	year = {2025},
	note = {Available at: \url{https://arxiv.org/abs/2505.03555}}
}

% PERFORMANCE OPTIMIZATION

% Constraint solving optimizations
@inproceedings{poeplau_symbolic_2020,
	title = {Symbolic Execution with {SymCC}: Don't Interpret, Compile!},
	booktitle = {29th USENIX Security Symposium},
	publisher = {USENIX Association},
	author = {Poeplau, Sebastian and Francillon, Aurélien},
	year = {2020},
	pages = {181--198}
}

% TAINT ANALYSIS INTEGRATION

% Pipelined taint analysis integration
@inproceedings{ming_taintpipe_2015,
	title = {{TaintPipe}: Pipelined Symbolic Taint Analysis},
	booktitle = {24th USENIX Security Symposium},
	publisher = {USENIX Association},
	author = {Ming, Jiang and Wu, Dinghao and Wang, Jun and Xing, Xinyu and Liu, Zhiqiang},
	year = {2015},
	pages = {65--80}
}

% COMPOSITIONAL ANALYSIS

% MACKE - compositional analysis with symbolic execution
@inproceedings{ognawala_macke_2016,
	title = {{MACKE}: Compositional Analysis of Low-Level Vulnerabilities with Symbolic Execution},
	booktitle = {Proceedings of the 31st Annual ACM Symposium on Applied Computing},
	publisher = {ACM},
	author = {Ognawala, Saahil and Ochoa, Martín and Pretschner, Alexander and Limmer, Tobias},
	year = {2016},
	pages = {1623--1628},
	series = {SAC '16}
}

% ANGR FRAMEWORK

% Main angr paper - SoK overview
@inproceedings{shoshitaishvili_sok_2016,
	title = {{SoK}: (State of) The Art of War: Offensive Techniques in Binary Analysis},
	booktitle = {IEEE Symposium on Security and Privacy},
	publisher = {IEEE},
	author = {Shoshitaishvili, Yan and Wang, Ruoyu and Salls, Christopher and Stephens, Nick and Polino, Mario and Dutcher, Audrey and Grosen, John and Feng, Siji and Hauser, Christophe and Kruegel, Christopher and Vigna, Giovanni},
	year = {2016},
	pages = {138--153}
}

% Angr educational paper
@inproceedings{springer_teaching_2018,
	title = {Teaching with Angr: A Symbolic Execution Curriculum and {CTF}},
	booktitle = {2018 IEEE/ACM 1st International Workshop on Automated Software Engineering Education},
	publisher = {IEEE},
	author = {Springer, Jake and Feng, Siji},
	year = {2018},
	pages = {13--20}
}
